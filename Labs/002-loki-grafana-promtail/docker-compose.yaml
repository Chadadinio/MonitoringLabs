services:
  server:
    build:
      dockerfile: Dockerfile
      context:    ../../resources/server
    ports:
      - "8090:8090"
    networks:
      - loki
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ../../resources/configs/config-loki.yaml:/etc/loki/config.yaml
    networks:
      - loki

  grafana:
    image: grafana/grafana:10.4.0
    restart: unless-stopped
    ports:
      - "3000:3000" # Grafana web UI
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    entrypoint:
       - sh
       - -euc
       - |
         /run.sh
    volumes:
      - ../../resources/configs/grafana-provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
      - prometheus
    networks:
      - loki

  prometheus:
    image: prom/prometheus:v2.45.3
    restart: unless-stopped
    volumes:
      - ../../resources/configs/prometheus/:/etc/prometheus/
    command:
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - server
      - node-exporter 
    networks:
      - loki 
      
  node-exporter:
    image: prom/node-exporter:v1.7.0
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - loki 
      
  portainer:
    image: portainer/portainer-ce:2.20.3
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - loki 
      
volumes:
  portainer_data:
    
networks:
  loki:

